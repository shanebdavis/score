import &ArtSuite, &Widgets, &Partials

class NewGame extends FluxComponent
  @subscriptions
    :allGameTypes.gameTypes
    :newGameState.newGameState
    :allPlayers.allPlayers

  render: ->
    log {@newGameState}
    {gameType, players, playersById} = @newGameState
    log {@allPlayers}
    allPlayers = array player from @allPlayers when !playersById[player.id]

    &Page
      title: "" New Game
      Button
        text:   "" game type: #{gameType?.name || "none"}
        action: ->
          @models.navState.pushGameTypesPage
            selectAction: (gt) ->
              @models.newGameState.setGameType gt

      players.length > 0 && PlayerList {}
        key: :addedPlayers
        players
        selectAction: @models.newGameState.removePlayer

      allPlayers.length > 0 && PlayerList
        players: allPlayers
        title: "" Add Players
        selectAction: @models.newGameState.addPlayer

      Button
        key: :otherPlayers
        text:   "" start game
        childrenAlignment: :centerCenter
        action: ->
          @models.newGameState.createGame()
          .then (game) ->
            @models.navState.popPage()
            @models.navState.pushGamePage game
